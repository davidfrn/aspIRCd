# M:line!
# Logging!
# It's all here.

serverinfo {
  # unless otherwise stated, all directives are required.

  # serverinfo::name: our server name (e.g. parsnip.en.gb.example.net)
  # does not have to be a hostname as long as it would be valid
  # were it one
  name = "irc.pandersticks.com";

  # serverinfo::description: our description. amusingly, despite there
  # being no thing to be compatible with, '[' and ']' are forbidden
  # here. (that's a great big flashing XXX in the code)
  description = "pandering to sticks since 1949 !";

  # serverinfo::sid: our SID. This must be specified for the server to
  # start. the first character must be one of the western digits 0
  # through 9. the second and third may be western digits or latin
  # uppercase alphabeticals.
  sid = "2ZZ";

  # serverinfo::network_name network_desc:
  # our network's name and description. this may be anything, but if we
  # have an uplink to another IRC server, this is ideally the same as
  # the configuration on that.
  # this should really be in network.ini, however, that would require
  # creating a new section or moving this to general.
  network_name = "Pandersticks";
  network_desc = "Pandering to sticks since God didn't exist";

  # serverinfo::hub: whether this server will permit itself to be
  # linked to more than one other server. in most cases, this can safely
  # be yes. #however#, if you have more than one uplink, you may want
  # to have this be no unless you also have servers uplinked to yours.
  # Your uplink Y:block could maybe limit the number of servers
  # connecte... and we're getting off topic.
  hub = yes;

  # serverinfo::vhost vhost6 (both optional):
  # our desired source interface for outbound connections from the
  # daemon. vhost and vhost6 must be ipv4 and ipv6 respectively.
  vhost = "192.168.0.1"; # change this, of course. Or comment it out
  # if you only have one IPv4 address.
  vhost6 = "fe80::1"; # change or comment, v6

  # serverinfo::ssl_cert ssl_private_key ssl_dh_params:
  # respectively: the certificate, the private key and the
  # Diffie Helmann parameters for the ircd.
  # DH parameters may be generated by, in the etc directory, typing:
  # openssl dhparam -out dh.pem 3072
  ssl_cert = "etc/ssl.cert";
  ssl_private_key = "etc/ssl.key";
  ssl_dh_params = "etc/dh.pem";

  # serverinfo::ssld_count:
  # number of sslds to spawn. ssld is a helper program for ircd to
  # support SSL. You need at least one.
  # Two is great, usually.
  # 2 or cpu core count-1, whichever is higher.
  ssld_count = 1;

  # serverinfo::default_max_clients:
  # the IRCd will crop this to the maximum number of sockets it
  # can legally handle. it's safe to set it sky-high.
  /* (from the original) This can be changed once ircd has started by
   * issuing:
   *   /quote set maxclients <limit>
   */
  default_max_clients = 1024;
};

admin {
  # admin::name description email (all required):
  # details about the executive of this IRC server.
  name = "Jane Smith";
  description = "Network Administrator";
  email = "<nobody@nowhere.invalid>";
};

log {
  # log::fname_*:
  # Filenames of logs. Nobody really knows what this is...
  # userlog: user connections/exits
  fname_userlog = "logs/userlog";
  # fuserlog: failed user connections
  fname_fuserlog = "logs/fuserlog";
  # operlog: /oper usage
  fname_operlog = "logs/operlog";
  # foperlog: failed /oper usage
  #fname_foperlog = "logs/foperlog";
  # serverlog: server connections/exits
  fname_serverlog = "logs/serverlog";
  # klinelog: klines, et cetera.
  #fname_klinelog = "logs/klinelog";
  # killlog: /kills
  fname_killlog = "logs/killlog";
  # operspylog: uses of operspy
  fname_operspylog = "logs/operspylog";
  # ioerrorlog: errors regarding input and output.
  #fname_ioerrorlog = "logs/ioerror";
};
