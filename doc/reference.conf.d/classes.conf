# Ohhhh goodie. Y:blocks. (named class""{};)
# You can name them, number them, whatever. The name has to go between
# quotes after the word "class".
# In this file we'll be using numbered classes with letters preceding
# indicating what kind of class this is.
# U - User
# UR - User, restricted
# UO - User, recipient of extra trust
# SD - Server, we hub for
# SU - Server, hub for us
# All the number is is an indicator for, well, you can make it
# whatever.
class "U100" {
  # class[]::ping_time:
  # This specifies how long the client or server is allowed to go
  # between replying to pings from this server.
  ping_time = 2 minutes;

  # class[]::number_per_ident number_per_ip number_per_ip_global
  # number_per_cidr:
  # The number of connections per username, per IP address
  # on this server, per IP over the network, per CIDR (defined
  # later)
  number_per_ident = 5;
  number_per_ip = 10;
  number_per_ip_global = 15;
  number_per_cidr = 20;

  # class[]::cidr_ipv4_bitlen cidr_ipv6_bitlen:
  # ipv4 would do well at 32 up to 29. IPv6 can be from 128 to
  # 64 with no repercussions.
  cidr_ipv4_bitlen = 32;
  cidr_ipv6_bitlen = 64;

  # class[]::max_number: maximum class size (best to have this be
  # something like 1 for uplink server classes, and 4000 for
  # user classes)
  max_number = 3500;

  # class[]::sendq: maximum amount of data we may send to the
  # client without forcing them off the network. Helps to have
  # this quite high in most cases.
  sendq = 180kb;

  # class[]::flood_multiplier: how severely flood-restricted this user is.
  # this is now configured by integer rather than by boolean, and per class
  # and oper rather than per IRCd.
  # 16 is the default, and denotes a normal level of restriction
  # typical of that offered to users.
  # 8 allows you to flood twice as fast as a normal user (multiplies the
  # left side of the equation by 8 rather than 16, with 16 being the
  # multiplier of the right side)
  # 4 is a typical multiplier for OPERS.
  # 2 is twice as fast as no_oper_flood.
  # 0 is true no flood.
  # No-oper-flood is still configurable in the general:: section but
  # presumably has no effect. In classes and opers, true no flood
  # is flood_multiplier = 0.
  flood_multiplier = 16;
};

class "UO100" {
  # class[]::ping_time:
  # This specifies how long the client or server is allowed to go
  # between replying to pings from this server.
  # Should be shorter for opers to prevent artificial inflation
  # of active oper counts.
  ping_time = 1 minutes;

  # class[]::number_per_ident number_per_ip number_per_ip_global
  # number_per_cidr:
  # The number of connections per username, per IP address
  # on this server, per IP over the network, per CIDR (defined
  # later)
  number_per_ident = 40;
  number_per_ip = 40;
  number_per_ip_global = 80;
  number_per_cidr = 40;

  # class[]::cidr_ipv4_bitlen cidr_ipv6_bitlen:
  # ipv4 would do well at 32 up to 29. IPv6 can be from 128 to
  # 64 with no repercussions.
  cidr_ipv4_bitlen = 32;
  cidr_ipv6_bitlen = 64;

  # class[]::max_number: maximum class size (best to have this be
  # something like 1 for uplink server classes, and 4000 for
  # user classes)
  # Should be minimum twice the number of opers opered up on the
  # server at any given point.
  max_number = 120;

  # class[]::sendq: maximum amount of data we may send to the
  # client without forcing them off the network. Helps to have
  # this quite high in most cases.
  sendq = 180kb;

  # class[]::flood_multiplier: how severely flood-restricted this user is.
  # 16 is the default, and denotes a normal level of restriction
  # typical of that offered to users.
  # 8 allows you to flood twice as fast as a normal user
  # 4 is a typical multiplier for OPERS.
  # 2 is twice as fast as no_oper_flood.
  # 0 is true no flood.
  # No-oper-flood is still configurable in the general:: section but
  # presumably has no effect. In classes and opers, true no flood
  # is flood_multiplier = 0.
  flood_multiplier = 6;
};

class "SD100" {
  # class[]::ping_time:
  # This specifies how long the client or server is allowed to go
  # between replying to pings from this server.
  # Servers should have shorter ping times - drop faster if
  # they're stoned.
  ping_time = 1 minutes;

  # class[]::number_per_ident number_per_ip number_per_ip_global
  # number_per_cidr: Inapplicable.

  # class[]::cidr_ipv4_bitlen cidr_ipv6_bitlen: Inapplicable.

  # class[]::max_number: maximum class size (best to have this be
  # something like 1 for uplink server classes, and 70 for
  # downlink server classes)
  max_number = 70;

  # class[]::sendq: maximum amount of data we may send to the
  # server without forcing them off the network. Helps to have
  # this quite high in most cases.
  # Must be about 10 times the average of all unrestricted user
  # class sendqueues.
  # We hub for these people. They need a highish sendQ.
  sendq = 2 megabytes;

  # class[]::flood_multiplier: how severely flood-restricted this user is.
  # inapplicable for server classes.
};

class "SU100" {
  # class[]::ping_time:
  # This specifies how long the client or server is allowed to go
  # between replying to pings from this server.
  # Servers should have shorter ping times - drop faster if
  # they're stoned.
  ping_time = 1 minutes;

  # class[]::connectfreq:
  # This specifies how long the server will wait between outbound
  # connections in this class.
  # For uplink classes, this should be between one and fifteen
  # minutes, higher if you only have one uplink, lower if you
  # have more than one and want to be relinked ASAP.
  connectfreq = 1 minute;

  # class[]::number_per_ident number_per_ip number_per_ip_global
  # number_per_cidr: Inapplicable.

  # class[]::cidr_ipv4_bitlen cidr_ipv6_bitlen: Inapplicable.

  # class[]::max_number: maximum class size (best to have this be
  # something like 1 for uplink server classes, and 4000 for
  # user classes)
  max_number = 1;

  # class[]::sendq: maximum amount of data we may send to the
  # server without forcing them off the network. Helps to have
  # this quite high in most cases.
  # Must be about 10 times the average of all unrestricted user
  # class sendqueues.
  # These people hub for us. They need the longest, widest
  # sendq we have.
  sendq = 10 megabytes;

  # class[]::flood_multiplier: how severely flood-restricted this user is.
  # inapplicable for server classes.
};
